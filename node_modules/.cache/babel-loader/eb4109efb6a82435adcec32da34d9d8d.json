{"ast":null,"code":"const validation = (value, name) => {\n  switch (name) {\n    case 'username':\n      let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (re.test(value)) {\n        return {\n          username: null\n        };\n      } else {\n        return {\n          username: 'Invalid email',\n          isValid: false\n        };\n      }\n\n    case 'password':\n      if (value.length > 5) {\n        return {\n          password: null\n        };\n      } else {\n        return {\n          password: 'Invalid password, might be > 5'\n        };\n      }\n\n    default:\n      break;\n  }\n};\n\nexport default validation; // switch (name) {\n//   case 'username':\n//     let re =\n//       /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n//     if (re.test(e.target.value)) {\n//       setVarification({ ...varification, username: null })\n//       varification.password ? setIsValid(false) : setIsValid(true)\n//     } else {\n//       setIsValid(false)\n//       setVarification({ ...varification, username: 'Invalid email' })\n//     }\n//     break\n//   case 'password':\n//     if (data.password.length > 5) {\n//       setVarification({ ...varification, password: null })\n//       varification.username ? setIsValid(false) : setIsValid(true)\n//     } else {\n//       setIsValid(false)\n//       setVarification({\n//         ...varification,\n//         password: 'Invalid password, might be > 5',\n//       })\n//     }\n//     break\n//   default:\n//     break\n// }","map":{"version":3,"names":["validation","value","name","re","test","username","isValid","length","password"],"sources":["/home/sonya/coursehunter/react-polnyy-kurs-po-react/react-curse/Y_lab-00/src/utils.js"],"sourcesContent":["const validation = (value, name) => {\n  switch (name) {\n    case 'username':\n      let re =\n        /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n      if (re.test(value)) {\n        return {\n          username: null,\n        }\n      } else {\n        return {\n          username: 'Invalid email',\n          isValid: false,\n        }\n      }\n    case 'password':\n      if (value.length > 5) {\n        return {\n          password: null,\n        }\n      } else {\n        return {\n          password: 'Invalid password, might be > 5',\n        }\n      }\n    default:\n      break\n  }\n}\n\nexport default validation\n// switch (name) {\n//   case 'username':\n//     let re =\n//       /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n//     if (re.test(e.target.value)) {\n//       setVarification({ ...varification, username: null })\n\n//       varification.password ? setIsValid(false) : setIsValid(true)\n//     } else {\n//       setIsValid(false)\n//       setVarification({ ...varification, username: 'Invalid email' })\n//     }\n//     break\n\n//   case 'password':\n//     if (data.password.length > 5) {\n//       setVarification({ ...varification, password: null })\n\n//       varification.username ? setIsValid(false) : setIsValid(true)\n//     } else {\n//       setIsValid(false)\n//       setVarification({\n//         ...varification,\n//         password: 'Invalid password, might be > 5',\n//       })\n//     }\n//     break\n\n//   default:\n//     break\n// }\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;EAClC,QAAQA,IAAR;IACE,KAAK,UAAL;MACE,IAAIC,EAAE,GACJ,wJADF;;MAGA,IAAIA,EAAE,CAACC,IAAH,CAAQH,KAAR,CAAJ,EAAoB;QAClB,OAAO;UACLI,QAAQ,EAAE;QADL,CAAP;MAGD,CAJD,MAIO;QACL,OAAO;UACLA,QAAQ,EAAE,eADL;UAELC,OAAO,EAAE;QAFJ,CAAP;MAID;;IACH,KAAK,UAAL;MACE,IAAIL,KAAK,CAACM,MAAN,GAAe,CAAnB,EAAsB;QACpB,OAAO;UACLC,QAAQ,EAAE;QADL,CAAP;MAGD,CAJD,MAIO;QACL,OAAO;UACLA,QAAQ,EAAE;QADL,CAAP;MAGD;;IACH;MACE;EA1BJ;AA4BD,CA7BD;;AA+BA,eAAeR,UAAf,C,CACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}